{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.0rc2", "generated_at": "2024-12-05T02:26:09.589693Z", "invocation_id": "c58260ea-9bea-4d3d-9f40-fc019f7f8a08", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:08.173438Z", "completed_at": "2024-12-05T02:26:08.981280Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:08.981830Z", "completed_at": "2024-12-05T02:26:08.981847Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.8928775787353516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.jaffle_shop.metricflow_time_spine", "compiled": true, "compiled_code": "-- metricflow_time_spine.sql\nwith\n\ndays as (\n\n    --for BQ adapters use \"DATE('01/01/2000','mm/dd/yyyy')\"\n    \n    with date_spine as\n(\n\n    \n\n\n\n\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * power(2, 0)\n     + \n    \n    p1.generated_number * power(2, 1)\n     + \n    \n    p2.generated_number * power(2, 2)\n     + \n    \n    p3.generated_number * power(2, 3)\n     + \n    \n    p4.generated_number * power(2, 4)\n     + \n    \n    p5.generated_number * power(2, 5)\n     + \n    \n    p6.generated_number * power(2, 6)\n     + \n    \n    p7.generated_number * power(2, 7)\n     + \n    \n    p8.generated_number * power(2, 8)\n     + \n    \n    p9.generated_number * power(2, 9)\n     + \n    \n    p10.generated_number * power(2, 10)\n     + \n    \n    p11.generated_number * power(2, 11)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n     cross join \n    \n    p as p11\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 3651\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n\n    \n\n    cast(cast(\n    cast(now() as timestamp)\n        at time zone 'UTC' at time zone 'America/Sao_Paulo' as timestamp\n) as date) + ((interval '1 day') * (-3650))\n\n + ((interval '1 day') * ((row_number() over (order by 1) - 1)))\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= cast(\n\n    cast(cast(\n    cast(now() as timestamp)\n        at time zone 'UTC' at time zone 'America/Sao_Paulo' as timestamp\n) as date) + ((interval '1 day') * (1))\n\n as date)\n\n)\n\nselect * from filtered\n\n\n\n)\nselect\n    cast(d.date_day as timestamp) as date_day\nfrom\n    date_spine d\n\n\n\n),\n\ncast_to_date as (\n\n    select cast(date_day as date) as date_day\n\n    from days\n\n)\n\nselect * from cast_to_date", "relation_name": "\"render_jaffle_shop\".\"public\".\"metricflow_time_spine\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.067666Z", "completed_at": "2024-12-05T02:26:09.072298Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.072793Z", "completed_at": "2024-12-05T02:26:09.072803Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006310224533081055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.jaffle_shop.stg_jaffle_shop__customers", "compiled": true, "compiled_code": "with\n\nsource as (\n\n    select * from \"render_jaffle_shop\".\"public_raw\".\"raw_customers\"\n\n),\n\nrenamed as (\n\n    select\n\n        ----------  ids\n        id as customer_id,\n\n        ---------- text\n        name as customer_name\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "\"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__customers\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.075347Z", "completed_at": "2024-12-05T02:26:09.126304Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.126838Z", "completed_at": "2024-12-05T02:26:09.126847Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.05272364616394043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.jaffle_shop.stg_jaffle_shop__locations", "compiled": true, "compiled_code": "with\n\nsource as (\n\n    select * from \"render_jaffle_shop\".\"public_raw\".\"raw_stores\"\n\n),\n\nrenamed as (\n\n    select\n\n        ----------  ids\n        id as location_id,\n\n        ---------- text\n        name as location_name,\n\n        ---------- numerics\n        tax_rate,\n\n        ---------- timestamps\n        date_trunc('day', opened_at) as opened_date\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "\"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__locations\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.129760Z", "completed_at": "2024-12-05T02:26:09.132776Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.133277Z", "completed_at": "2024-12-05T02:26:09.133284Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004962921142578125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.jaffle_shop.stg_jaffle_shop__order_items", "compiled": true, "compiled_code": "with\n\nsource as (\n\n    select * from \"render_jaffle_shop\".\"public_raw\".\"raw_items\"\n\n\n),\n\nrenamed as (\n\n    select\n\n        ----------  ids\n        id as order_item_id,\n        order_id,\n        sku as product_id\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "\"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__order_items\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.135774Z", "completed_at": "2024-12-05T02:26:09.140134Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.140650Z", "completed_at": "2024-12-05T02:26:09.140657Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0060498714447021484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.jaffle_shop.stg_jaffle_shop__orders", "compiled": true, "compiled_code": "with\n\nsource as (\n\n    select * from \"render_jaffle_shop\".\"public_raw\".\"raw_orders\"\n\n),\n\nrenamed as (\n\n    select\n\n        ----------  ids\n        id as order_id,\n        store_id as location_id,\n        customer as customer_id,\n\n        ---------- numerics\n        subtotal as subtotal_cents,\n        tax_paid as tax_paid_cents,\n        order_total as order_total_cents,\n        (subtotal::numeric(16, 2) / 100) as subtotal,\n        (tax_paid::numeric(16, 2) / 100) as tax_paid,\n        (order_total::numeric(16, 2) / 100) as order_total,\n\n        ---------- timestamps\n        date_trunc('day', ordered_at) as ordered_at\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "\"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__orders\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.143311Z", "completed_at": "2024-12-05T02:26:09.146498Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.146990Z", "completed_at": "2024-12-05T02:26:09.146997Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0048520565032958984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.jaffle_shop.stg_jaffle_shop__products", "compiled": true, "compiled_code": "with\n\nsource as (\n\n    select * from \"render_jaffle_shop\".\"public_raw\".\"raw_products\"\n\n),\n\nrenamed as (\n\n    select\n\n        ----------  ids\n        sku as product_id,\n\n        ---------- text\n        name as product_name,\n        type as product_type,\n        description as product_description,\n\n\n        ---------- numerics\n        (price::numeric(16, 2) / 100) as product_price,\n\n        ---------- booleans\n        coalesce(type = 'jaffle', false) as is_food_item,\n\n        coalesce(type = 'beverage', false) as is_drink_item\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "\"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__products\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.149459Z", "completed_at": "2024-12-05T02:26:09.153461Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.154006Z", "completed_at": "2024-12-05T02:26:09.154013Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005680561065673828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.jaffle_shop.stg_jaffle_shop__supplies", "compiled": true, "compiled_code": "with\n\nsource as (\n\n    select * from \"render_jaffle_shop\".\"public_raw\".\"raw_supplies\"\n\n),\n\nrenamed as (\n\n    select\n\n    ----------  ids\n        md5(cast(coalesce(cast(id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(sku as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as supply_uuid,\n        id as supply_id,\n        sku as product_id,\n\n        ---------- text\n        name as supply_name,\n\n        ---------- numerics\n        (cost::numeric(16, 2) / 100) as supply_cost,\n\n        ---------- booleans\n        perishable as is_perishable_supply\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "\"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__supplies\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.156426Z", "completed_at": "2024-12-05T02:26:09.157930Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.158428Z", "completed_at": "2024-12-05T02:26:09.158435Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.003063678741455078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.jaffle_shop.raw_customers", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.160633Z", "completed_at": "2024-12-05T02:26:09.162077Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.162560Z", "completed_at": "2024-12-05T02:26:09.162567Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0029630661010742188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.jaffle_shop.raw_items", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.164727Z", "completed_at": "2024-12-05T02:26:09.166243Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.166735Z", "completed_at": "2024-12-05T02:26:09.166742Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0030319690704345703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.jaffle_shop.raw_orders", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.168966Z", "completed_at": "2024-12-05T02:26:09.171813Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.172299Z", "completed_at": "2024-12-05T02:26:09.172305Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0043795108795166016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.jaffle_shop.raw_products", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.174568Z", "completed_at": "2024-12-05T02:26:09.175974Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.176453Z", "completed_at": "2024-12-05T02:26:09.176460Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0030167102813720703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.jaffle_shop.raw_stores", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.178708Z", "completed_at": "2024-12-05T02:26:09.180110Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.180588Z", "completed_at": "2024-12-05T02:26:09.180594Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0029327869415283203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.jaffle_shop.raw_supplies", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.182829Z", "completed_at": "2024-12-05T02:26:09.189633Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.190129Z", "completed_at": "2024-12-05T02:26:09.190136Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008338451385498047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.not_null_stg_jaffle_shop__customers_customer_id.b4343d8610", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__customers\"\nwhere customer_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.192378Z", "completed_at": "2024-12-05T02:26:09.198526Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.199029Z", "completed_at": "2024-12-05T02:26:09.199036Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007754087448120117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.unique_stg_jaffle_shop__customers_customer_id.231d91af86", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    customer_id as unique_field,\n    count(*) as n_records\n\nfrom \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__customers\"\nwhere customer_id is not null\ngroup by customer_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.201268Z", "completed_at": "2024-12-05T02:26:09.204069Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.204545Z", "completed_at": "2024-12-05T02:26:09.204552Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004325151443481445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.jaffle_shop.locations", "compiled": true, "compiled_code": "with\n\nlocations as (\n\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__locations\"\n\n)\n\nselect * from locations", "relation_name": "\"render_jaffle_shop\".\"public\".\"locations\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.206809Z", "completed_at": "2024-12-05T02:26:09.210588Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.211073Z", "completed_at": "2024-12-05T02:26:09.211080Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0053179264068603516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.not_null_stg_jaffle_shop__locations_location_id.fac82d5b51", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect location_id\nfrom \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__locations\"\nwhere location_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.213341Z", "completed_at": "2024-12-05T02:26:09.217189Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.217684Z", "completed_at": "2024-12-05T02:26:09.217691Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0054569244384765625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.unique_stg_jaffle_shop__locations_location_id.a5bd2f9239", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    location_id as unique_field,\n    count(*) as n_records\n\nfrom \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__locations\"\nwhere location_id is not null\ngroup by location_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.219889Z", "completed_at": "2024-12-05T02:26:09.223808Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.224289Z", "completed_at": "2024-12-05T02:26:09.224296Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005435466766357422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.not_null_stg_jaffle_shop__order_items_order_id.5811e11bd3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_id\nfrom \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__order_items\"\nwhere order_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.226550Z", "completed_at": "2024-12-05T02:26:09.231977Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.232467Z", "completed_at": "2024-12-05T02:26:09.232473Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006983041763305664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.not_null_stg_jaffle_shop__order_items_order_item_id.3c81a8c35f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_item_id\nfrom \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__order_items\"\nwhere order_item_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.234718Z", "completed_at": "2024-12-05T02:26:09.238533Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.239018Z", "completed_at": "2024-12-05T02:26:09.239025Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005360603332519531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.unique_stg_jaffle_shop__order_items_order_item_id.78174e8216", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_item_id as unique_field,\n    count(*) as n_records\n\nfrom \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__order_items\"\nwhere order_item_id is not null\ngroup by order_item_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.246974Z", "completed_at": "2024-12-05T02:26:09.251061Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.251548Z", "completed_at": "2024-12-05T02:26:09.251555Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005748271942138672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.dbt_utils_expression_is_true_stg_jaffle_shop__orders_order_total_tax_paid_subtotal.1a725d6d17", "compiled": true, "compiled_code": "\n\n\n\nselect\n    1\nfrom \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__orders\"\n\nwhere not(order_total - tax_paid = subtotal)\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.253927Z", "completed_at": "2024-12-05T02:26:09.257651Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.258135Z", "completed_at": "2024-12-05T02:26:09.258142Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0052874088287353516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.not_null_stg_jaffle_shop__orders_order_id.aad0410d08", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_id\nfrom \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__orders\"\nwhere order_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.260361Z", "completed_at": "2024-12-05T02:26:09.265147Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.265656Z", "completed_at": "2024-12-05T02:26:09.265664Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006345272064208984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.relationships_stg_jaffle_shop__order_items_order_id__order_id__ref_stg_jaffle_shop__orders_.8c6a76ffbe", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select order_id as from_field\n    from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__order_items\"\n    where order_id is not null\n),\n\nparent as (\n    select order_id as to_field\n    from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__orders\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.267898Z", "completed_at": "2024-12-05T02:26:09.271710Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.272181Z", "completed_at": "2024-12-05T02:26:09.272187Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005337715148925781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.unique_stg_jaffle_shop__orders_order_id.7f899b6afe", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_id as unique_field,\n    count(*) as n_records\n\nfrom \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__orders\"\nwhere order_id is not null\ngroup by order_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.274419Z", "completed_at": "2024-12-05T02:26:09.277064Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.277537Z", "completed_at": "2024-12-05T02:26:09.277544Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004265785217285156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.jaffle_shop.products", "compiled": true, "compiled_code": "with\n\nproducts as (\n\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__products\"\n\n)\n\nselect * from products", "relation_name": "\"render_jaffle_shop\".\"public\".\"products\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.279810Z", "completed_at": "2024-12-05T02:26:09.283645Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.284121Z", "completed_at": "2024-12-05T02:26:09.284128Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005346775054931641, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.not_null_stg_jaffle_shop__products_product_id.b2099f871d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_id\nfrom \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__products\"\nwhere product_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.286363Z", "completed_at": "2024-12-05T02:26:09.291775Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.292260Z", "completed_at": "2024-12-05T02:26:09.292267Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006979465484619141, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.unique_stg_jaffle_shop__products_product_id.bf13395ea0", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    product_id as unique_field,\n    count(*) as n_records\n\nfrom \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__products\"\nwhere product_id is not null\ngroup by product_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.299554Z", "completed_at": "2024-12-05T02:26:09.302255Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.302739Z", "completed_at": "2024-12-05T02:26:09.302746Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0043773651123046875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.jaffle_shop.supplies", "compiled": true, "compiled_code": "with\n\nsupplies as (\n\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__supplies\"\n\n)\n\nselect * from supplies", "relation_name": "\"render_jaffle_shop\".\"public\".\"supplies\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.304975Z", "completed_at": "2024-12-05T02:26:09.308863Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.309344Z", "completed_at": "2024-12-05T02:26:09.309350Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005415916442871094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.not_null_stg_jaffle_shop__supplies_supply_uuid.324410ab9a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect supply_uuid\nfrom \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__supplies\"\nwhere supply_uuid is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.311619Z", "completed_at": "2024-12-05T02:26:09.315310Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.315862Z", "completed_at": "2024-12-05T02:26:09.315869Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005325794219970703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.unique_stg_jaffle_shop__supplies_supply_uuid.0fdc4fc884", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    supply_uuid as unique_field,\n    count(*) as n_records\n\nfrom \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__supplies\"\nwhere supply_uuid is not null\ngroup by supply_uuid\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.318107Z", "completed_at": "2024-12-05T02:26:09.321749Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.322229Z", "completed_at": "2024-12-05T02:26:09.322236Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0051937103271484375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.jaffle_shop.customers", "compiled": true, "compiled_code": "with\n\n __dbt__cte__int_sales__customers_with_summary as (\nwith\n\ncustomers as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__customers\"\n),\n\norders as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__orders\"\n),\n\norders_summary as (\n\n    select\n\n        orders.customer_id,\n\n        count(distinct orders.order_id) as count_lifetime_orders,\n        count(distinct orders.order_id) > 1 as is_repeat_buyer,\n\n        min(orders.ordered_at) as first_ordered_at,\n        max(orders.ordered_at) as last_ordered_at,\n\n        sum(orders.subtotal) as lifetime_spend_pretax,\n        sum(orders.tax_paid) as lifetime_tax_paid,\n        sum(orders.order_total) as lifetime_spend\n\n    from orders\n\n    group by 1\n\n),\n\njoined as (\n\n    select\n\n    customers.*,\n\n    orders_summary.count_lifetime_orders,\n    orders_summary.first_ordered_at,\n    orders_summary.last_ordered_at,\n    orders_summary.lifetime_spend_pretax,\n    orders_summary.lifetime_tax_paid,\n    orders_summary.lifetime_spend,\n\n        case\n            when orders_summary.is_repeat_buyer then 'returning'\n            else 'new'\n        end as customer_type\n\n    from customers\n\n    left join orders_summary\n        on customers.customer_id = orders_summary.customer_id\n\n)\n\nselect * from joined\n), customers as (\n    select * from __dbt__cte__int_sales__customers_with_summary\n)\n\nselect * from customers", "relation_name": "\"render_jaffle_shop\".\"public\".\"customers\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.324847Z", "completed_at": "2024-12-05T02:26:09.331012Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.331502Z", "completed_at": "2024-12-05T02:26:09.331509Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008037328720092773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.accepted_values_int_sales__customers_with_summary_customer_type__new__returning.7e840f37e9", "compiled": true, "compiled_code": "\n    \n    \n\nwith  __dbt__cte__int_sales__customers_with_summary as (\nwith\n\ncustomers as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__customers\"\n),\n\norders as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__orders\"\n),\n\norders_summary as (\n\n    select\n\n        orders.customer_id,\n\n        count(distinct orders.order_id) as count_lifetime_orders,\n        count(distinct orders.order_id) > 1 as is_repeat_buyer,\n\n        min(orders.ordered_at) as first_ordered_at,\n        max(orders.ordered_at) as last_ordered_at,\n\n        sum(orders.subtotal) as lifetime_spend_pretax,\n        sum(orders.tax_paid) as lifetime_tax_paid,\n        sum(orders.order_total) as lifetime_spend\n\n    from orders\n\n    group by 1\n\n),\n\njoined as (\n\n    select\n\n    customers.*,\n\n    orders_summary.count_lifetime_orders,\n    orders_summary.first_ordered_at,\n    orders_summary.last_ordered_at,\n    orders_summary.lifetime_spend_pretax,\n    orders_summary.lifetime_tax_paid,\n    orders_summary.lifetime_spend,\n\n        case\n            when orders_summary.is_repeat_buyer then 'returning'\n            else 'new'\n        end as customer_type\n\n    from customers\n\n    left join orders_summary\n        on customers.customer_id = orders_summary.customer_id\n\n)\n\nselect * from joined\n), all_values as (\n\n    select\n        customer_type as value_field,\n        count(*) as n_records\n\n    from __dbt__cte__int_sales__customers_with_summary\n    group by customer_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'new','returning'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.333754Z", "completed_at": "2024-12-05T02:26:09.338343Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.338823Z", "completed_at": "2024-12-05T02:26:09.338830Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006142616271972656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.not_null_int_sales__customers_with_summary_customer_id.d33f9a3a57", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__int_sales__customers_with_summary as (\nwith\n\ncustomers as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__customers\"\n),\n\norders as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__orders\"\n),\n\norders_summary as (\n\n    select\n\n        orders.customer_id,\n\n        count(distinct orders.order_id) as count_lifetime_orders,\n        count(distinct orders.order_id) > 1 as is_repeat_buyer,\n\n        min(orders.ordered_at) as first_ordered_at,\n        max(orders.ordered_at) as last_ordered_at,\n\n        sum(orders.subtotal) as lifetime_spend_pretax,\n        sum(orders.tax_paid) as lifetime_tax_paid,\n        sum(orders.order_total) as lifetime_spend\n\n    from orders\n\n    group by 1\n\n),\n\njoined as (\n\n    select\n\n    customers.*,\n\n    orders_summary.count_lifetime_orders,\n    orders_summary.first_ordered_at,\n    orders_summary.last_ordered_at,\n    orders_summary.lifetime_spend_pretax,\n    orders_summary.lifetime_tax_paid,\n    orders_summary.lifetime_spend,\n\n        case\n            when orders_summary.is_repeat_buyer then 'returning'\n            else 'new'\n        end as customer_type\n\n    from customers\n\n    left join orders_summary\n        on customers.customer_id = orders_summary.customer_id\n\n)\n\nselect * from joined\n) select customer_id\nfrom __dbt__cte__int_sales__customers_with_summary\nwhere customer_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.341080Z", "completed_at": "2024-12-05T02:26:09.350120Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.350624Z", "completed_at": "2024-12-05T02:26:09.350631Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010611772537231445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.relationships_int_sales__customers_with_summary_customer_id__customer_id__ref_stg_jaffle_shop__customers_.26b7cd651e", "compiled": true, "compiled_code": "\n    \n    \n\nwith  __dbt__cte__int_sales__customers_with_summary as (\nwith\n\ncustomers as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__customers\"\n),\n\norders as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__orders\"\n),\n\norders_summary as (\n\n    select\n\n        orders.customer_id,\n\n        count(distinct orders.order_id) as count_lifetime_orders,\n        count(distinct orders.order_id) > 1 as is_repeat_buyer,\n\n        min(orders.ordered_at) as first_ordered_at,\n        max(orders.ordered_at) as last_ordered_at,\n\n        sum(orders.subtotal) as lifetime_spend_pretax,\n        sum(orders.tax_paid) as lifetime_tax_paid,\n        sum(orders.order_total) as lifetime_spend\n\n    from orders\n\n    group by 1\n\n),\n\njoined as (\n\n    select\n\n    customers.*,\n\n    orders_summary.count_lifetime_orders,\n    orders_summary.first_ordered_at,\n    orders_summary.last_ordered_at,\n    orders_summary.lifetime_spend_pretax,\n    orders_summary.lifetime_tax_paid,\n    orders_summary.lifetime_spend,\n\n        case\n            when orders_summary.is_repeat_buyer then 'returning'\n            else 'new'\n        end as customer_type\n\n    from customers\n\n    left join orders_summary\n        on customers.customer_id = orders_summary.customer_id\n\n)\n\nselect * from joined\n), child as (\n    select customer_id as from_field\n    from __dbt__cte__int_sales__customers_with_summary\n    where customer_id is not null\n),\n\nparent as (\n    select customer_id as to_field\n    from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__customers\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.352977Z", "completed_at": "2024-12-05T02:26:09.358665Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.359177Z", "completed_at": "2024-12-05T02:26:09.359185Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007296323776245117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.unique_int_sales__customers_with_summary_customer_id.758b57474d", "compiled": true, "compiled_code": "\n    \n    \n\nwith __dbt__cte__int_sales__customers_with_summary as (\nwith\n\ncustomers as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__customers\"\n),\n\norders as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__orders\"\n),\n\norders_summary as (\n\n    select\n\n        orders.customer_id,\n\n        count(distinct orders.order_id) as count_lifetime_orders,\n        count(distinct orders.order_id) > 1 as is_repeat_buyer,\n\n        min(orders.ordered_at) as first_ordered_at,\n        max(orders.ordered_at) as last_ordered_at,\n\n        sum(orders.subtotal) as lifetime_spend_pretax,\n        sum(orders.tax_paid) as lifetime_tax_paid,\n        sum(orders.order_total) as lifetime_spend\n\n    from orders\n\n    group by 1\n\n),\n\njoined as (\n\n    select\n\n    customers.*,\n\n    orders_summary.count_lifetime_orders,\n    orders_summary.first_ordered_at,\n    orders_summary.last_ordered_at,\n    orders_summary.lifetime_spend_pretax,\n    orders_summary.lifetime_tax_paid,\n    orders_summary.lifetime_spend,\n\n        case\n            when orders_summary.is_repeat_buyer then 'returning'\n            else 'new'\n        end as customer_type\n\n    from customers\n\n    left join orders_summary\n        on customers.customer_id = orders_summary.customer_id\n\n)\n\nselect * from joined\n) select\n    customer_id as unique_field,\n    count(*) as n_records\n\nfrom __dbt__cte__int_sales__customers_with_summary\nwhere customer_id is not null\ngroup by customer_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.373140Z", "completed_at": "2024-12-05T02:26:09.377932Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.378449Z", "completed_at": "2024-12-05T02:26:09.378456Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006541728973388672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.not_null_int_sales__supplies_summary_product_id.cf8499b923", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__int_sales__supplies_summary as (\nwith\n\nsupplies as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__supplies\"\n),\n\nsum as (\n    select\n        product_id,\n        sum(supply_cost) as supply_cost\n    from supplies\n    group by 1\n)\n\nselect * from sum\n) select product_id\nfrom __dbt__cte__int_sales__supplies_summary\nwhere product_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.380811Z", "completed_at": "2024-12-05T02:26:09.388656Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.389168Z", "completed_at": "2024-12-05T02:26:09.389175Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009474039077758789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.relationships_int_sales__supplies_summary_product_id__product_id__ref_stg_jaffle_shop__products_.a9199d63e7", "compiled": true, "compiled_code": "\n    \n    \n\nwith  __dbt__cte__int_sales__supplies_summary as (\nwith\n\nsupplies as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__supplies\"\n),\n\nsum as (\n    select\n        product_id,\n        sum(supply_cost) as supply_cost\n    from supplies\n    group by 1\n)\n\nselect * from sum\n), child as (\n    select product_id as from_field\n    from __dbt__cte__int_sales__supplies_summary\n    where product_id is not null\n),\n\nparent as (\n    select product_id as to_field\n    from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__products\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.391530Z", "completed_at": "2024-12-05T02:26:09.395475Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.395971Z", "completed_at": "2024-12-05T02:26:09.395978Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005539417266845703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.accepted_values_customers_customer_type__new__returning.d12f0947c8", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        customer_type as value_field,\n        count(*) as n_records\n\n    from \"render_jaffle_shop\".\"public\".\"customers\"\n    group by customer_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'new','returning'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.398397Z", "completed_at": "2024-12-05T02:26:09.402770Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.403265Z", "completed_at": "2024-12-05T02:26:09.403272Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006072044372558594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.dbt_utils_expression_is_true_customers_lifetime_spend_pretax_lifetime_tax_paid_lifetime_spend.ad37c989b6", "compiled": true, "compiled_code": "\n\n\n\nselect\n    1\nfrom \"render_jaffle_shop\".\"public\".\"customers\"\n\nwhere not(lifetime_spend_pretax + lifetime_tax_paid = lifetime_spend)\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.405582Z", "completed_at": "2024-12-05T02:26:09.409493Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.410010Z", "completed_at": "2024-12-05T02:26:09.410017Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005565643310546875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom \"render_jaffle_shop\".\"public\".\"customers\"\nwhere customer_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.412320Z", "completed_at": "2024-12-05T02:26:09.417897Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.418394Z", "completed_at": "2024-12-05T02:26:09.418401Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00716400146484375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    customer_id as unique_field,\n    count(*) as n_records\n\nfrom \"render_jaffle_shop\".\"public\".\"customers\"\nwhere customer_id is not null\ngroup by customer_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.420700Z", "completed_at": "2024-12-05T02:26:09.424222Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.424718Z", "completed_at": "2024-12-05T02:26:09.424725Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00510716438293457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.jaffle_shop.order_items", "compiled": true, "compiled_code": "with\n\n __dbt__cte__int_sales__supplies_summary as (\nwith\n\nsupplies as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__supplies\"\n),\n\nsum as (\n    select\n        product_id,\n        sum(supply_cost) as supply_cost\n    from supplies\n    group by 1\n)\n\nselect * from sum\n),  __dbt__cte__int_sales__joined_with_products as (\nwith\n\norder_items as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__order_items\"\n),\n\norders as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__orders\"\n),\n\nproducts as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__products\"\n),\n\norder_supplies_summary as (\n    select * from __dbt__cte__int_sales__supplies_summary\n),\n\njoined as (\n    select\n        order_items.*,\n        orders.ordered_at,\n        products.product_name,\n        products.product_price,\n        products.is_food_item,\n        products.is_drink_item,\n        order_supplies_summary.supply_cost\n    from order_items\n    left join orders\n        on order_items.order_id = orders.order_id\n    left join products\n        on order_items.product_id = products.product_id\n    left join order_supplies_summary\n        on order_items.product_id = order_supplies_summary.product_id\n)\n\nselect * from joined\n), order_items as (\n    select * from __dbt__cte__int_sales__joined_with_products\n)\n\nselect * from order_items", "relation_name": "\"render_jaffle_shop\".\"public\".\"order_items\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.427262Z", "completed_at": "2024-12-05T02:26:09.432043Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.432552Z", "completed_at": "2024-12-05T02:26:09.432559Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0064737796783447266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.not_null_int_sales__joined_with_products_order_id.ce891dea4e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__int_sales__supplies_summary as (\nwith\n\nsupplies as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__supplies\"\n),\n\nsum as (\n    select\n        product_id,\n        sum(supply_cost) as supply_cost\n    from supplies\n    group by 1\n)\n\nselect * from sum\n),  __dbt__cte__int_sales__joined_with_products as (\nwith\n\norder_items as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__order_items\"\n),\n\norders as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__orders\"\n),\n\nproducts as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__products\"\n),\n\norder_supplies_summary as (\n    select * from __dbt__cte__int_sales__supplies_summary\n),\n\njoined as (\n    select\n        order_items.*,\n        orders.ordered_at,\n        products.product_name,\n        products.product_price,\n        products.is_food_item,\n        products.is_drink_item,\n        order_supplies_summary.supply_cost\n    from order_items\n    left join orders\n        on order_items.order_id = orders.order_id\n    left join products\n        on order_items.product_id = products.product_id\n    left join order_supplies_summary\n        on order_items.product_id = order_supplies_summary.product_id\n)\n\nselect * from joined\n) select order_id\nfrom __dbt__cte__int_sales__joined_with_products\nwhere order_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.434910Z", "completed_at": "2024-12-05T02:26:09.439461Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.439965Z", "completed_at": "2024-12-05T02:26:09.439972Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006150484085083008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.not_null_int_sales__joined_with_products_order_item_id.d9d368d34a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__int_sales__supplies_summary as (\nwith\n\nsupplies as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__supplies\"\n),\n\nsum as (\n    select\n        product_id,\n        sum(supply_cost) as supply_cost\n    from supplies\n    group by 1\n)\n\nselect * from sum\n),  __dbt__cte__int_sales__joined_with_products as (\nwith\n\norder_items as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__order_items\"\n),\n\norders as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__orders\"\n),\n\nproducts as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__products\"\n),\n\norder_supplies_summary as (\n    select * from __dbt__cte__int_sales__supplies_summary\n),\n\njoined as (\n    select\n        order_items.*,\n        orders.ordered_at,\n        products.product_name,\n        products.product_price,\n        products.is_food_item,\n        products.is_drink_item,\n        order_supplies_summary.supply_cost\n    from order_items\n    left join orders\n        on order_items.order_id = orders.order_id\n    left join products\n        on order_items.product_id = products.product_id\n    left join order_supplies_summary\n        on order_items.product_id = order_supplies_summary.product_id\n)\n\nselect * from joined\n) select order_item_id\nfrom __dbt__cte__int_sales__joined_with_products\nwhere order_item_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.442332Z", "completed_at": "2024-12-05T02:26:09.447006Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.447504Z", "completed_at": "2024-12-05T02:26:09.447511Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0063076019287109375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.not_null_int_sales__joined_with_products_product_id.d1c4c3d5b0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__int_sales__supplies_summary as (\nwith\n\nsupplies as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__supplies\"\n),\n\nsum as (\n    select\n        product_id,\n        sum(supply_cost) as supply_cost\n    from supplies\n    group by 1\n)\n\nselect * from sum\n),  __dbt__cte__int_sales__joined_with_products as (\nwith\n\norder_items as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__order_items\"\n),\n\norders as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__orders\"\n),\n\nproducts as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__products\"\n),\n\norder_supplies_summary as (\n    select * from __dbt__cte__int_sales__supplies_summary\n),\n\njoined as (\n    select\n        order_items.*,\n        orders.ordered_at,\n        products.product_name,\n        products.product_price,\n        products.is_food_item,\n        products.is_drink_item,\n        order_supplies_summary.supply_cost\n    from order_items\n    left join orders\n        on order_items.order_id = orders.order_id\n    left join products\n        on order_items.product_id = products.product_id\n    left join order_supplies_summary\n        on order_items.product_id = order_supplies_summary.product_id\n)\n\nselect * from joined\n) select product_id\nfrom __dbt__cte__int_sales__joined_with_products\nwhere product_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.450013Z", "completed_at": "2024-12-05T02:26:09.457623Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.458130Z", "completed_at": "2024-12-05T02:26:09.458137Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009245634078979492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.relationships_int_sales__joined_with_products_order_id__order_id__ref_stg_jaffle_shop__orders_.0045ce82cf", "compiled": true, "compiled_code": "\n    \n    \n\nwith  __dbt__cte__int_sales__supplies_summary as (\nwith\n\nsupplies as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__supplies\"\n),\n\nsum as (\n    select\n        product_id,\n        sum(supply_cost) as supply_cost\n    from supplies\n    group by 1\n)\n\nselect * from sum\n),  __dbt__cte__int_sales__joined_with_products as (\nwith\n\norder_items as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__order_items\"\n),\n\norders as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__orders\"\n),\n\nproducts as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__products\"\n),\n\norder_supplies_summary as (\n    select * from __dbt__cte__int_sales__supplies_summary\n),\n\njoined as (\n    select\n        order_items.*,\n        orders.ordered_at,\n        products.product_name,\n        products.product_price,\n        products.is_food_item,\n        products.is_drink_item,\n        order_supplies_summary.supply_cost\n    from order_items\n    left join orders\n        on order_items.order_id = orders.order_id\n    left join products\n        on order_items.product_id = products.product_id\n    left join order_supplies_summary\n        on order_items.product_id = order_supplies_summary.product_id\n)\n\nselect * from joined\n), child as (\n    select order_id as from_field\n    from __dbt__cte__int_sales__joined_with_products\n    where order_id is not null\n),\n\nparent as (\n    select order_id as to_field\n    from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__orders\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.460474Z", "completed_at": "2024-12-05T02:26:09.468335Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.468834Z", "completed_at": "2024-12-05T02:26:09.468841Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009467601776123047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.relationships_int_sales__joined_with_products_product_id__product_id__ref_stg_jaffle_shop__products_.1002c603bf", "compiled": true, "compiled_code": "\n    \n    \n\nwith  __dbt__cte__int_sales__supplies_summary as (\nwith\n\nsupplies as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__supplies\"\n),\n\nsum as (\n    select\n        product_id,\n        sum(supply_cost) as supply_cost\n    from supplies\n    group by 1\n)\n\nselect * from sum\n),  __dbt__cte__int_sales__joined_with_products as (\nwith\n\norder_items as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__order_items\"\n),\n\norders as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__orders\"\n),\n\nproducts as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__products\"\n),\n\norder_supplies_summary as (\n    select * from __dbt__cte__int_sales__supplies_summary\n),\n\njoined as (\n    select\n        order_items.*,\n        orders.ordered_at,\n        products.product_name,\n        products.product_price,\n        products.is_food_item,\n        products.is_drink_item,\n        order_supplies_summary.supply_cost\n    from order_items\n    left join orders\n        on order_items.order_id = orders.order_id\n    left join products\n        on order_items.product_id = products.product_id\n    left join order_supplies_summary\n        on order_items.product_id = order_supplies_summary.product_id\n)\n\nselect * from joined\n), child as (\n    select product_id as from_field\n    from __dbt__cte__int_sales__joined_with_products\n    where product_id is not null\n),\n\nparent as (\n    select product_id as to_field\n    from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__products\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.471199Z", "completed_at": "2024-12-05T02:26:09.476722Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.477216Z", "completed_at": "2024-12-05T02:26:09.477223Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007150173187255859, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.unique_int_sales__joined_with_products_order_item_id.c8d01353f7", "compiled": true, "compiled_code": "\n    \n    \n\nwith __dbt__cte__int_sales__supplies_summary as (\nwith\n\nsupplies as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__supplies\"\n),\n\nsum as (\n    select\n        product_id,\n        sum(supply_cost) as supply_cost\n    from supplies\n    group by 1\n)\n\nselect * from sum\n),  __dbt__cte__int_sales__joined_with_products as (\nwith\n\norder_items as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__order_items\"\n),\n\norders as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__orders\"\n),\n\nproducts as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__products\"\n),\n\norder_supplies_summary as (\n    select * from __dbt__cte__int_sales__supplies_summary\n),\n\njoined as (\n    select\n        order_items.*,\n        orders.ordered_at,\n        products.product_name,\n        products.product_price,\n        products.is_food_item,\n        products.is_drink_item,\n        order_supplies_summary.supply_cost\n    from order_items\n    left join orders\n        on order_items.order_id = orders.order_id\n    left join products\n        on order_items.product_id = products.product_id\n    left join order_supplies_summary\n        on order_items.product_id = order_supplies_summary.product_id\n)\n\nselect * from joined\n) select\n    order_item_id as unique_field,\n    count(*) as n_records\n\nfrom __dbt__cte__int_sales__joined_with_products\nwhere order_item_id is not null\ngroup by order_item_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.486685Z", "completed_at": "2024-12-05T02:26:09.490767Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.491279Z", "completed_at": "2024-12-05T02:26:09.491287Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0057566165924072266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.not_null_order_items_order_item_id.c6fda366bd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_item_id\nfrom \"render_jaffle_shop\".\"public\".\"order_items\"\nwhere order_item_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.493604Z", "completed_at": "2024-12-05T02:26:09.497599Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.498099Z", "completed_at": "2024-12-05T02:26:09.498107Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005602598190307617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.unique_order_items_order_item_id.7d0a7e900a", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_item_id as unique_field,\n    count(*) as n_records\n\nfrom \"render_jaffle_shop\".\"public\".\"order_items\"\nwhere order_item_id is not null\ngroup by order_item_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.500424Z", "completed_at": "2024-12-05T02:26:09.505703Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.506207Z", "completed_at": "2024-12-05T02:26:09.506214Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0068721771240234375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.jaffle_shop.orders", "compiled": true, "compiled_code": "with\n\n __dbt__cte__int_sales__aggregated_with_booleans as (\nwith\n\norders as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__orders\"\n),\n\norder_items as (\n    select * from \"render_jaffle_shop\".\"public\".\"order_items\"\n),\n\norder_items_summary as (\n\n    select\n\n        order_id,\n\n        sum(supply_cost) as order_cost,\n        sum(product_price) as order_items_subtotal,\n        count(order_item_id) as count_order_items,\n\n        sum(\n            case when is_food_item then 1 else 0 end\n        ) as count_food_items,\n        sum(\n            case when is_drink_item then 1 else 0 end\n        ) as count_drink_items\n\n    from order_items\n\n    group by 1\n\n),\n\naggregated as (\n    select\n        orders.*,\n        order_items_summary.order_cost,\n        order_items_summary.order_items_subtotal,\n        order_items_summary.count_food_items,\n        order_items_summary.count_drink_items,\n        order_items_summary.count_order_items,\n        order_items_summary.count_food_items > 0 as is_food_order,\n        order_items_summary.count_drink_items > 0 as is_drink_order\n    from orders\n    left join order_items_summary\n        on orders.order_id = order_items_summary.order_id\n)\n\nselect * from aggregated\n), compute_booleans as (\n    select * from __dbt__cte__int_sales__aggregated_with_booleans\n),\n\ncount as (\n\n    select\n        *,\n\n        row_number() over (\n            partition by customer_id\n            order by ordered_at asc\n        ) as customer_order_number\n\n    from compute_booleans\n\n)\n\nselect * from count", "relation_name": "\"render_jaffle_shop\".\"public\".\"orders\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.508729Z", "completed_at": "2024-12-05T02:26:09.515222Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.515735Z", "completed_at": "2024-12-05T02:26:09.515742Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008319854736328125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.accepted_values_int_sales__aggregated_with_booleans_is_drink_order__True__False.bb2f8ffcc4", "compiled": true, "compiled_code": "\n    \n    \n\nwith  __dbt__cte__int_sales__aggregated_with_booleans as (\nwith\n\norders as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__orders\"\n),\n\norder_items as (\n    select * from \"render_jaffle_shop\".\"public\".\"order_items\"\n),\n\norder_items_summary as (\n\n    select\n\n        order_id,\n\n        sum(supply_cost) as order_cost,\n        sum(product_price) as order_items_subtotal,\n        count(order_item_id) as count_order_items,\n\n        sum(\n            case when is_food_item then 1 else 0 end\n        ) as count_food_items,\n        sum(\n            case when is_drink_item then 1 else 0 end\n        ) as count_drink_items\n\n    from order_items\n\n    group by 1\n\n),\n\naggregated as (\n    select\n        orders.*,\n        order_items_summary.order_cost,\n        order_items_summary.order_items_subtotal,\n        order_items_summary.count_food_items,\n        order_items_summary.count_drink_items,\n        order_items_summary.count_order_items,\n        order_items_summary.count_food_items > 0 as is_food_order,\n        order_items_summary.count_drink_items > 0 as is_drink_order\n    from orders\n    left join order_items_summary\n        on orders.order_id = order_items_summary.order_id\n)\n\nselect * from aggregated\n), all_values as (\n\n    select\n        is_drink_order as value_field,\n        count(*) as n_records\n\n    from __dbt__cte__int_sales__aggregated_with_booleans\n    group by is_drink_order\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'True','False'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.518138Z", "completed_at": "2024-12-05T02:26:09.524436Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.524945Z", "completed_at": "2024-12-05T02:26:09.524953Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00795125961303711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.accepted_values_int_sales__aggregated_with_booleans_is_food_order__True__False.41134aeffb", "compiled": true, "compiled_code": "\n    \n    \n\nwith  __dbt__cte__int_sales__aggregated_with_booleans as (\nwith\n\norders as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__orders\"\n),\n\norder_items as (\n    select * from \"render_jaffle_shop\".\"public\".\"order_items\"\n),\n\norder_items_summary as (\n\n    select\n\n        order_id,\n\n        sum(supply_cost) as order_cost,\n        sum(product_price) as order_items_subtotal,\n        count(order_item_id) as count_order_items,\n\n        sum(\n            case when is_food_item then 1 else 0 end\n        ) as count_food_items,\n        sum(\n            case when is_drink_item then 1 else 0 end\n        ) as count_drink_items\n\n    from order_items\n\n    group by 1\n\n),\n\naggregated as (\n    select\n        orders.*,\n        order_items_summary.order_cost,\n        order_items_summary.order_items_subtotal,\n        order_items_summary.count_food_items,\n        order_items_summary.count_drink_items,\n        order_items_summary.count_order_items,\n        order_items_summary.count_food_items > 0 as is_food_order,\n        order_items_summary.count_drink_items > 0 as is_drink_order\n    from orders\n    left join order_items_summary\n        on orders.order_id = order_items_summary.order_id\n)\n\nselect * from aggregated\n), all_values as (\n\n    select\n        is_food_order as value_field,\n        count(*) as n_records\n\n    from __dbt__cte__int_sales__aggregated_with_booleans\n    group by is_food_order\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'True','False'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.527329Z", "completed_at": "2024-12-05T02:26:09.532071Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.532569Z", "completed_at": "2024-12-05T02:26:09.532576Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0063593387603759766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.not_null_int_sales__aggregated_with_booleans_order_id.10c431686b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__int_sales__aggregated_with_booleans as (\nwith\n\norders as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__orders\"\n),\n\norder_items as (\n    select * from \"render_jaffle_shop\".\"public\".\"order_items\"\n),\n\norder_items_summary as (\n\n    select\n\n        order_id,\n\n        sum(supply_cost) as order_cost,\n        sum(product_price) as order_items_subtotal,\n        count(order_item_id) as count_order_items,\n\n        sum(\n            case when is_food_item then 1 else 0 end\n        ) as count_food_items,\n        sum(\n            case when is_drink_item then 1 else 0 end\n        ) as count_drink_items\n\n    from order_items\n\n    group by 1\n\n),\n\naggregated as (\n    select\n        orders.*,\n        order_items_summary.order_cost,\n        order_items_summary.order_items_subtotal,\n        order_items_summary.count_food_items,\n        order_items_summary.count_drink_items,\n        order_items_summary.count_order_items,\n        order_items_summary.count_food_items > 0 as is_food_order,\n        order_items_summary.count_drink_items > 0 as is_drink_order\n    from orders\n    left join order_items_summary\n        on orders.order_id = order_items_summary.order_id\n)\n\nselect * from aggregated\n) select order_id\nfrom __dbt__cte__int_sales__aggregated_with_booleans\nwhere order_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.534956Z", "completed_at": "2024-12-05T02:26:09.540504Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.541007Z", "completed_at": "2024-12-05T02:26:09.541014Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007157802581787109, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.unique_int_sales__aggregated_with_booleans_order_id.95fe1b4376", "compiled": true, "compiled_code": "\n    \n    \n\nwith __dbt__cte__int_sales__aggregated_with_booleans as (\nwith\n\norders as (\n    select * from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__orders\"\n),\n\norder_items as (\n    select * from \"render_jaffle_shop\".\"public\".\"order_items\"\n),\n\norder_items_summary as (\n\n    select\n\n        order_id,\n\n        sum(supply_cost) as order_cost,\n        sum(product_price) as order_items_subtotal,\n        count(order_item_id) as count_order_items,\n\n        sum(\n            case when is_food_item then 1 else 0 end\n        ) as count_food_items,\n        sum(\n            case when is_drink_item then 1 else 0 end\n        ) as count_drink_items\n\n    from order_items\n\n    group by 1\n\n),\n\naggregated as (\n    select\n        orders.*,\n        order_items_summary.order_cost,\n        order_items_summary.order_items_subtotal,\n        order_items_summary.count_food_items,\n        order_items_summary.count_drink_items,\n        order_items_summary.count_order_items,\n        order_items_summary.count_food_items > 0 as is_food_order,\n        order_items_summary.count_drink_items > 0 as is_drink_order\n    from orders\n    left join order_items_summary\n        on orders.order_id = order_items_summary.order_id\n)\n\nselect * from aggregated\n) select\n    order_id as unique_field,\n    count(*) as n_records\n\nfrom __dbt__cte__int_sales__aggregated_with_booleans\nwhere order_id is not null\ngroup by order_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.543414Z", "completed_at": "2024-12-05T02:26:09.549974Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.550565Z", "completed_at": "2024-12-05T02:26:09.550572Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008324146270751953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.dbt_utils_expression_is_true_orders_order_items_subtotal_subtotal.b1416e07ec", "compiled": true, "compiled_code": "\n\n\n\nselect\n    1\nfrom \"render_jaffle_shop\".\"public\".\"orders\"\n\nwhere not(order_items_subtotal = subtotal)\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.552940Z", "completed_at": "2024-12-05T02:26:09.557192Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.557734Z", "completed_at": "2024-12-05T02:26:09.557741Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005913257598876953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.dbt_utils_expression_is_true_orders_order_total_subtotal_tax_paid.2aba85df92", "compiled": true, "compiled_code": "\n\n\n\nselect\n    1\nfrom \"render_jaffle_shop\".\"public\".\"orders\"\n\nwhere not(order_total = subtotal + tax_paid)\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.560123Z", "completed_at": "2024-12-05T02:26:09.564177Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.564678Z", "completed_at": "2024-12-05T02:26:09.564685Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005712270736694336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.not_null_orders_order_id.cf6c17daed", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_id\nfrom \"render_jaffle_shop\".\"public\".\"orders\"\nwhere order_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.567127Z", "completed_at": "2024-12-05T02:26:09.571910Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.572424Z", "completed_at": "2024-12-05T02:26:09.572431Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006403923034667969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.relationships_order_items_order_id__order_id__ref_orders_.a799023ee8", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select order_id as from_field\n    from \"render_jaffle_shop\".\"public\".\"order_items\"\n    where order_id is not null\n),\n\nparent as (\n    select order_id as to_field\n    from \"render_jaffle_shop\".\"public\".\"orders\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.574849Z", "completed_at": "2024-12-05T02:26:09.579935Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.580447Z", "completed_at": "2024-12-05T02:26:09.580454Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0067479610443115234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_stg_jaffle_shop__customers_.2ef79c49f9", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select customer_id as from_field\n    from \"render_jaffle_shop\".\"public\".\"orders\"\n    where customer_id is not null\n),\n\nparent as (\n    select customer_id as to_field\n    from \"render_jaffle_shop\".\"public\".\"stg_jaffle_shop__customers\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-05T02:26:09.582805Z", "completed_at": "2024-12-05T02:26:09.586637Z"}, {"name": "execute", "started_at": "2024-12-05T02:26:09.587132Z", "completed_at": "2024-12-05T02:26:09.587139Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00542759895324707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.unique_orders_order_id.fed79b3a6e", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_id as unique_field,\n    count(*) as n_records\n\nfrom \"render_jaffle_shop\".\"public\".\"orders\"\nwhere order_id is not null\ngroup by order_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}], "elapsed_time": 4.046265125274658, "args": {"which": "generate", "indirect_selection": "eager", "profiles_dir": "/home/runner/.dbt", "quiet": false, "select": [], "printer_width": 80, "cache_selected_only": false, "partial_parse": true, "exclude": [], "use_colors": true, "require_resource_names_without_spaces": false, "favor_state": false, "invocation_command": "dbt docs generate", "partial_parse_file_diff": true, "defer": false, "empty_catalog": false, "show_resource_report": false, "compile": true, "use_colors_file": true, "static": false, "log_level": "info", "print": true, "static_parser": true, "version_check": true, "log_level_file": "debug", "write_json": true, "skip_nodes_if_on_run_start_fails": false, "source_freshness_run_project_hooks": false, "state_modified_compare_more_unrendered_values": false, "log_file_max_bytes": 10485760, "require_nested_cumulative_type_params": false, "warn_error_options": {"include": [], "exclude": []}, "state_modified_compare_vars": false, "introspect": true, "require_batched_execution_for_custom_microbatch_strategy": false, "populate_cache": true, "project_dir": "/home/runner/work/dbt-jaffle-shop/dbt-jaffle-shop/jaffle_shop", "log_format": "default", "require_explicit_package_overrides_for_builtin_materializations": true, "macro_debugging": false, "log_path": "/home/runner/work/dbt-jaffle-shop/dbt-jaffle-shop/jaffle_shop/logs", "vars": {}, "log_format_file": "debug", "send_anonymous_usage_stats": true, "strict_mode": false, "require_yaml_configuration_for_mf_time_spines": false}}